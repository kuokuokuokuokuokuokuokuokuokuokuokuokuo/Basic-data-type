# 基本数据类型
  java 8种数据类型 :
    boolean : 布尔型 1/8 个字节
    char : 字符型 2个字节
    数值型 :  {
               浮点类型 : {
                          double(默认) : 1.797693e+308~ 4.9000000e-324 占用8个字节
                          float(f)    :  3.402823e+38 ~ 1.401298e-45（e+38表示是乘以10的38次方，同样，e-45表示乘以10的负45次方）占用4个字节
                          //double型比float型存储范围更大，精度更高，所以通常的浮点型的数据在不声明的情况下都是double型的，
                          如果要表示一个数据是float型的，可以在数据后面加上“F”。 浮点型的数据是不能完全精确的，
                          所以有的时候在计算的时候可能会在小数点最后几位出现浮动，这是正常的。 
                          }
               整数类型 : {
                          byte :  1个字节  -(2^-7) ~ (2^7)-1
                          short : 2个字节  从-32768到32767  -(2^-15) ~ (2^15)-1
                          int :   4个字节  从-2147483648,到2147483647共10位  -(2^-31) ~ (2^31)-1
                          long :  8个字节  从-9223372036854775808到9223372036854775807共19位   -(2^-63) ~ (2^63) - 1
                          }
              }
              
              
 注意事项：

①String不是基本数据类型，是引用数据类型，它是java提供的一个类

②Java基本类型存储在栈中，因此它们的存取速度要快于存储在堆中的对应包装类的实例对象。从Java5.0（1.5）开始，JAVA虚拟机（Java Virtual Machine）可以完成基本类型和它们对应包装类之间的自动转换。因此我们在赋值、参数传递以及数学运算的时候像使用基本类型一样使用它们的包装类，但这并不意味着你可以通过基本类型调用它们的包装类才具有的方法。另外，所有基本类型的包装类都使用了final修饰，因此我们无法继承它们扩展新的类，也无法重写它们的任何方法。

③基本类型的优势：数据存储相对简单，运算效率比较高

包装类的优势：有的容易，比如集合的元素必须是对象类型，满足了java一切皆是对象的思想
